/* lar_ebcdic.h: Data link ebcdic character maps.
 * 
 * Written by Jay Schulist <jschlst@samba.org>
 * Copyright (c) 2001 by Jay Schulist <jschlst@samba.org>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version
 * 2 of the License, or (at your option) any later version.
 *
 * None of the authors or maintainers or their employers admit
 * liability nor provide warranty for any of this software.
 * This material is provided "as is" and at no charge.
 */

#ifndef _LAR_EBCDIC_H
#define _LAR_EBCDIC_H

static unsigned char const ebcdic_to_rotated[256] = {
	 0,   1,   2,   3,   4,   5,   6,   7,         /* 0 -     7 */
	 8,   9,  10,  11,  12,  13,  14,  15,         /* 8 -    15 */
        16,  17,  18,  19,  20,  21,  22,  23,         /* 16 -   23 */
        24,  25,  26,  27,  28,  29,  30,  31,         /* 24 -   31 */
        32,  33,  34,  35,  36,  37,  38,  39,         /* 32 -   39 */
        40,  41,  42,  43,  44,  45,  46,  47,         /* 40 -   47 */
        48,  49,  50,  51,  52,  53,  54,  55,         /* 48 -   55 */
        56,  57,  58,  59,  60,  61,  62,  63,         /* 56 -   63 */
         1,  65,  66,  67,  68,  69,  70,  71,          /* 64 -   71 */
        72,  73,  74,  75,  76,  77,  78,  79,         /* 72 -   79 */
        80,  81,  82,  83,  84,  85,  86,  87,         /* 80 -   87 */
        88,  89,  90, 109,  92,  93,  94,  95,         /* 88 -   95 */
        96,  97,  98,  99, 100, 101, 102, 103,         /* 96 -  103 */
       104, 105, 106, 107, 108, 109, 110, 111,         /* 104 - 111 */
       112, 113, 114, 115, 116, 117, 118, 119,         /* 112 - 119 */
       120, 121, 122, 237, 241, 125, 126, 127,         /* 120 - 127 */
       128, 129, 130, 131, 132, 133, 134, 135,         /* 128 - 135 */
       136, 137, 138, 139, 140, 141, 142, 143,         /* 136 - 143 */
       144, 145, 146, 147, 148, 149, 150, 151,         /* 144 - 151 */
       152, 153, 154, 155, 156, 157, 158, 159,         /* 152 - 159 */
       160, 161, 162, 163, 164, 165, 166, 167,         /* 160 - 167 */
       168, 169, 170, 171, 172, 173, 174, 175,         /* 168 - 175 */
       176, 177, 178, 179, 180, 181, 182, 183,         /* 176 - 183 */
       184, 185, 186, 187, 188, 189, 190, 191,         /* 184 - 191 */
       192,   7,  11,  14,  19,  23,  27,  31,         /* 192 - 199 */
        35,  39, 202, 203, 204, 205, 206, 207,         /* 200 - 207 */
       208,  71,  75,  79,  83,  87,  91,  95,         /* 208 - 215 */
        99, 103, 218, 219, 220, 221, 222, 223,         /* 216 - 223 */
       224, 225, 139, 143, 147, 151, 155, 159,         /* 224 - 231 */
       163, 167, 234, 235, 236, 237, 238, 239,         /* 232 - 239 */
       195, 199, 203, 207, 211, 215, 219, 223,         /* 240 - 247 */
       227, 231, 250, 251, 252, 253, 254, 255          /* 248 - 255 */
};

static unsigned char const ebcdic_to_ascii_sna[256] =
{
	 0,   1,   2,   3,   4,   5,   6,   7,         /* 0 -     7 */
	 8,   9,  10,  11,  12,  13,  14,  15,         /* 8 -    15 */
	16,  17,  18,  19,  20,  21,  22,  23,         /* 16 -   23 */
        24,  25,  26,  27,  28,  29,  30,  31,
        32,  33,  34,  35,  36,  37,  38,  39,
        40,  41,  42,  43,  44,  45,  46,  47,
        48,  49,  50,  51,  52,  53,  54,  55,
        56,  57,  58,  59,  60,  61,  62,  63,
        32,  65,  66,  67,  68,  69,  70,  71,
        72,  73,  74,  75,  76,  77,  78,  79,
        80,  81,  82,  83,  84,  85,  86,  87,
        88,  89,  90,  91,  92,  93,  94,  95,
        96,  97,  98,  99, 100, 101, 102, 103,
       104, 105, 106, 107, 108, 109, 110, 111,
       112, 113, 114, 115, 116, 117, 118, 119,
       120, 121, 122, 123, 124, 125, 126, 127,
       128, 129, 130, 131, 132, 133, 134, 135,
       136, 137, 138, 139, 140, 141, 142, 143,
       144, 145, 146, 147, 148, 149, 150, 151,
       152, 153, 154, 155, 156, 157, 158, 159,
       160, 161, 162, 163, 164, 165, 166, 167,
       168, 169, 170, 171, 172, 173, 174, 175,
       176, 177, 178, 179, 180, 181, 182, 183,
       184, 185, 186, 187, 188, 189, 190, 191,
       192,  65,  66,  67,  68,  69,  70,  71,
        72,  73, 202, 203, 204, 205, 206, 207,
       208,  74,  75,  76,  77,  78,  79,  80,
        81,  82, 218, 219, 220, 221, 222, 223,
       224, 225,  83,  84,  85,  86,  87,  88,
        89,  90, 234, 235, 236, 237, 238, 239,
       240, 241, 242, 243, 244, 245, 246, 247,
       248, 249, 250, 251, 252, 253, 254, 255
};

static unsigned char const ascii_to_ebcdic_sna[256] =
{
	 0,   1,   2,   3,  55,  45,  46,  47,         /* 0  -    7 */
	22,   5,  37,  11,  12,  13,  14,  15,         /* 8  -   15 */
        16,   0,   0,   0,   0,  61,  50,  38,         /* 16 -   23 */
        24,  25,  63,  39,   0,   0,   0,   0,         /* 24 -   31 */
        64,   0, 127, 123,  80, 108,  91, 121,         /* 32 -   39 */
        77,  93,  53,  78, 107,  96,  75,  97,         /* 40 -   47 */
       240, 241, 242, 243, 244, 245, 246, 247,         /* 48 -   55 */
       248, 249, 122,  94,  76, 126, 110, 111,         /* 56 -   63 */
       124, 193, 194, 195, 196, 197, 198, 199,         /* 64 -   71 */
       200, 201, 209, 210, 211, 212, 213, 214,         /* 72 -   79 */
       215, 216, 217, 226, 227, 228, 229, 230,         /* 80 -   87 */
       231, 232, 233,  74, 224,   0,  95, 109,         /* 88 -   95 */
       125, 129, 130, 131, 132, 133, 134, 135,         /* 96 -  103 */
       136, 137, 145, 146, 147, 148, 149, 150,         /* 104 - 111 */
       151, 152, 153, 162, 163, 164, 165, 166,         /* 112 - 119 */
       167, 168, 169, 192, 106, 208, 161,   7,         /* 120 - 127 */
         0,   0,   0,   0,   0,   0,   0,   0,         /* 128 - 135 */
         0,   0,   0,   0,   0,   0,   0,   0,         /* 136 - 143 */
         0,   0,   0,   0,   0,   0,   0               /* 144 - 150 */
};

extern unsigned char etor(unsigned char a);
extern unsigned char etoa(unsigned char a);
extern unsigned char atoe(unsigned char a);
extern char *atoe_strcpy(char *dest, char *src);
extern char *etoa_strcpy(char *dest, char *src);
extern char *etor_strncpy(char *dest, char *src, size_t count);
extern char *atoe_strncpy(char *dest, char *src, size_t count);
extern char *fatoe_strncpy(char *dest, char *src, size_t count);
extern char *etoa_strncpy(char *dest, char *src, size_t count);
extern int atoe_strcmp(const char *acs, const char *ect);
extern int etoa_strcmp(const char *ecs, const char *act);
extern int atoe_strncmp(const char *acs, const char *ect, size_t count);
extern int etoa_strncmp(const char *ecs, const char *act, size_t count);
extern unsigned char flip_byte(unsigned char v);
#endif	/* _LAR_EBCDIC_H */
